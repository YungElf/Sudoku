package net.davekirkwood.sudoku.client.game;

import java.util.ArrayList;

import net.davekirkwood.sudoku.client.graphics.Board;

public class Game {

	   public static final int EASY = 1;
	   public static final int INTERMEDIATE = 2;
	   public static final int HARD = 3;
	   public static final int VERY_HARD = 4;
	   public static final int NEW_PUZZLE = 5;
	   public static final int CUSTOM = 6;
	   
	   public static String getGameDesciprion(int level) {
	      if(level == EASY) {
	         return "Easy";
	      }
	      if(level == INTERMEDIATE) {
	         return "Intermediate";
	      }
	      if(level == HARD) {
	         return "Hard";
	      }
	      if(level == VERY_HARD) {
	         return "Very Hard";
	      }
	      if(level == NEW_PUZZLE) {
	         return "New Puzzle";
	      }
	      if(level == CUSTOM) {
	         return "Custom";
	      }
	      return null;
	   }

	   private static int[][][] EASY_GAMES = new int[][][] 
	         { { { 0,9,0,0,2,0,8,0,1 }, { 8,2,0,0,9,0,6,0,7 }, { 1,0,0,8,6,3,0,0,5 }, { 0,0,1,3,0,0,4,7,2 }, { 5,3,8,0,4,0,0,1,0 }, { 2,7,0,6,1,9,3,0,0 }, { 3,1,9,0,0,0,5,8,0 }, { 0,0,6,4,0,8,0,2,9 }, { 0,0,2,9,5,1,0,6,0 } }, 
	           { { 6,0,3,2,0,0,4,0,1 }, { 0,1,0,8,3,0,0,2,5 }, { 2,5,0,4,0,1,0,0,8 }, { 4,0,0,0,9,0,8,1,3 }, { 0,0,5,0,1,4,2,9,0 }, { 1,9,2,0,6,8,0,0,0 }, { 0,2,8,1,0,7,0,3,0 }, { 3,7,0,0,2,5,1,0,0 }, { 0,0,1,6,0,0,7,5,2 } },
	           { { 0,0,8,0,1,0,3,6,9 }, { 0,0,3,0,9,5,8,0,4 }, { 9,1,4,8,0,3,0,0,0 }, { 0,0,5,3,2,0,1,0,6 }, { 0,6,7,9,0,0,0,2,8 }, { 8,2,0,6,7,0,0,0,3 }, { 7,0,0,5,4,9,0,3,0 }, { 1,4,0,0,0,6,2,8,0 }, { 5,3,0,0,0,2,9,4,0 } },
	           { { 8,6,0,4,9,0,0,7,0 }, { 0,7,4,0,5,8,0,1,0 }, { 0,0,9,0,0,6,8,4,2 }, { 9,4,2,6,0,0,0,0,7 }, { 6,0,7,9,0,0,4,0,3 }, { 3,0,0,1,4,0,9,0,6 }, { 1,9,6,2,7,0,0,0,0 }, { 0,5,3,0,0,1,2,9,0 }, { 0,0,0,0,3,9,7,6,1 } },
	           { { 8,0,3,2,4,0,0,6,0 }, { 1,7,0,0,3,0,4,8,0 }, { 4,0,0,6,0,1,7,0,5 }, { 0,8,2,0,0,4,6,0,0 }, { 0,6,0,0,2,9,0,1,4 }, { 9,1,0,0,6,3,0,5,0 }, { 7,0,1,3,0,8,0,0,6 }, { 0,3,8,4,0,2,5,0,1 }, { 0,0,5,7,1,0,3,4,0 } } }; 
	// Test Game
	   private static int[][][] CHEAT_GAMES = new int[][][] 
	         { { { 4,5,1,7,6,9,3,2,8 }, { 7,8,2,4,3,1,6,5,9 }, { 6,9,3,8,2,5,4,1,7 }, { 1,3,9,6,4,7,2,8,5 }, { 5,4,8,3,1,2,7,9,6 }, { 2,6,7,9,5,8,1,3,4 }, { 8,2,5,1,7,4,9,6,3 }, { 9,7,6,2,8,3,5,4,1 }, { 3,1,4,5,9,6,8,7,0 } }, 
	         { { 4,5,1,7,6,9,3,2,8 }, { 7,8,2,4,3,1,6,5,9 }, { 6,9,3,8,2,5,4,1,7 }, { 1,3,9,6,4,7,2,8,5 }, { 5,4,8,3,1,2,7,9,6 }, { 2,6,7,9,5,8,1,3,4 }, { 8,2,5,1,7,4,9,6,3 }, { 9,7,6,2,8,3,5,4,1 }, { 3,1,4,5,9,6,8,7,0 } },
	         { { 4,5,1,7,6,9,3,2,8 }, { 7,8,2,4,3,1,6,5,9 }, { 6,9,3,8,2,5,4,1,7 }, { 1,3,9,6,4,7,2,8,5 }, { 5,4,8,3,1,2,7,9,6 }, { 2,6,7,9,5,8,1,3,4 }, { 8,2,5,1,7,4,9,6,3 }, { 9,7,6,2,8,3,5,4,1 }, { 3,1,4,5,9,6,8,7,0 } },
	         { { 4,5,1,7,6,9,3,2,8 }, { 7,8,2,4,3,1,6,5,9 }, { 6,9,3,8,2,5,4,1,7 }, { 1,3,9,6,4,7,2,8,5 }, { 5,4,8,3,1,2,7,9,6 }, { 2,6,7,9,5,8,1,3,4 }, { 8,2,5,1,7,4,9,6,3 }, { 9,7,6,2,8,3,5,4,1 }, { 3,1,4,5,9,6,8,7,0 } },
	         { { 4,5,1,7,6,9,3,2,8 }, { 7,8,2,4,3,1,6,5,9 }, { 6,9,3,8,2,5,4,1,7 }, { 1,3,9,6,4,7,2,8,5 }, { 5,4,8,3,1,2,7,9,6 }, { 2,6,7,9,5,8,1,3,4 }, { 8,2,5,1,7,4,9,6,3 }, { 9,7,6,2,8,3,5,4,1 }, { 3,1,4,5,9,6,8,7,0 } } }; 
	   
	   private static int[][][] INTERMEDIATE_GAMES = new int[][][]
	         { { { 5,0,4,9,0,0,0,8,0 }, { 0,0,9,1,0,0,6,2,0 }, { 0,0,0,5,0,7,9,0,0 }, { 2,0,0,0,4,0,5,1,0 }, { 9,0,0,0,0,5,0,0,3 }, { 8,0,5,6,9,0,0,0,0 }, { 0,5,0,0,7,0,4,0,0 }, { 0,9,0,0,0,6,0,0,2 }, { 0,2,0,0,5,3,0,0,6 } },
	           { { 3,8,0,1,0,0,0,0,2 }, { 7,0,0,0,0,0,0,0,0 }, { 0,0,0,0,4,2,5,3,0 }, { 0,0,8,9,0,1,6,2,0 }, { 0,0,0,0,0,6,0,0,1 }, { 9,6,0,0,0,7,3,0,0 }, { 0,4,0,5,0,0,2,0,0 }, { 1,0,6,0,0,0,0,5,3 }, { 0,2,0,8,6,3,4,0,0 } },
	           { { 0,0,6,3,0,0,0,9,2 }, { 3,0,0,0,0,6,0,1,0 }, { 5,4,0,9,0,0,0,0,7 }, { 1,0,4,0,0,0,2,0,9 }, { 0,0,8,0,9,0,0,0,4 }, { 0,0,3,7,0,2,0,8,0 }, { 0,3,0,0,0,9,1,0,0 }, { 0,8,0,0,7,0,9,0,0 }, { 2,0,0,0,1,0,5,7,0 } },
	           { { 5,3,0,1,0,0,0,9,0 }, { 0,0,0,7,0,8,0,0,1 }, { 1,0,0,0,0,2,8,0,0 }, { 0,1,6,0,4,0,3,0,0 }, { 4,0,3,8,0,0,0,0,2 }, { 0,0,0,0,7,3,0,0,8 }, { 0,6,4,0,0,0,1,5,0 }, { 7,5,0,0,2,0,0,8,0 }, { 0,0,0,5,9,0,7,0,0 } },
	           { { 0,7,6,4,0,9,8,5,0 }, { 0,0,9,8,0,0,3,0,0 }, { 0,0,0,0,0,0,0,0,0 }, { 5,0,0,2,3,0,0,0,0 }, { 2,0,0,0,0,1,7,0,5 }, { 0,0,7,0,0,5,0,8,1 }, { 0,4,3,5,2,0,1,7,0 }, { 0,2,8,0,6,0,5,9,0 }, { 0,0,0,7,0,0,0,0,0 } } };

	   private static int[][][] HARD_GAMES = new int[][][] 
	         { { { 0,0,1,0,9,0,0,6,0 }, { 0,0,8,0,6,1,0,0,0 }, { 0,3,0,0,2,0,4,0,1 }, { 0,0,4,0,0,6,0,0,7 }, { 8,0,0,4,0,0,6,9,0 }, { 0,1,0,9,5,0,0,0,0 }, { 1,2,9,0,0,5,0,0,0 }, { 7,0,0,0,0,0,0,8,2 }, { 0,0,0,6,0,2,3,0,0 } },
	           { { 7,6,0,0,0,0,0,0,0 }, { 0,0,5,6,3,0,0,2,4 }, { 0,0,0,0,5,2,0,0,1 }, { 9,4,0,0,8,0,0,6,0 }, { 3,0,0,0,4,0,0,1,0 }, { 0,0,0,7,0,6,0,0,0 }, { 0,9,4,3,0,0,1,0,0 }, { 0,0,0,0,0,1,7,0,2 }, { 0,0,7,4,0,8,0,3,0 } },
	           { { 0,6,0,4,0,8,0,0,0 }, { 0,7,0,0,0,6,0,0,9 }, { 4,0,0,0,0,2,0,1,6 }, { 0,0,7,0,4,0,0,9,0 }, { 0,0,0,6,0,7,1,0,0 }, { 2,0,0,0,9,0,7,0,0 }, { 0,8,1,0,0,0,0,0,4 }, { 6,5,0,7,0,0,2,0,0 }, { 0,0,0,5,8,0,0,6,7 } },
	           { { 0,0,0,1,0,0,0,4,2 }, { 0,4,1,0,0,0,0,3,0 }, { 0,0,5,0,3,4,0,0,0 }, { 0,1,0,3,0,9,0,0,5 }, { 0,6,0,0,0,5,4,0,1 }, { 5,7,0,0,8,0,0,0,0 }, { 0,0,0,2,0,0,6,9,0 }, { 4,0,0,8,1,0,2,0,0 }, { 7,0,6,0,0,0,0,1,0 } },
	           { { 1,0,0,0,4,2,5,0,0 }, { 0,0,0,0,8,0,2,0,7 }, { 0,2,8,5,0,7,0,0,0 }, { 0,0,7,4,0,0,3,5,0 }, { 0,9,0,0,6,0,8,0,0 }, { 0,4,0,0,0,5,0,0,1 }, { 0,0,0,6,0,3,0,9,0 }, { 7,0,4,0,0,0,0,6,0 }, { 2,0,0,0,1,0,0,0,5 } } };

	   private static int[][][] VERY_HARD_GAMES = new int[][][] 
	         { { { 0,0,0,0,8,1,0,2,0 }, { 8,2,0,3,0,0,0,9,0 }, { 0,0,7,0,0,0,0,4,8 }, { 4,0,2,0,0,0,0,0,6 }, { 0,6,0,0,4,0,1,0,0 }, { 0,0,0,0,3,0,0,0,0 }, { 0,3,0,0,1,0,0,0,4 }, { 5,0,0,2,0,0,0,0,0 }, { 0,0,9,0,0,0,5,0,0 } },
	           { { 0,3,0,0,0,0,0,9,0 }, { 5,0,0,0,0,0,4,8,0 }, { 0,6,0,0,2,9,0,0,0 }, { 8,0,0,2,0,0,1,0,0 }, { 0,0,0,0,5,0,8,0,6 }, { 0,0,9,6,0,0,0,7,0 }, { 0,0,0,0,1,0,0,0,0 }, { 0,8,0,0,0,4,0,0,7 }, { 3,0,7,5,0,0,0,0,0 } },
	           { { 0,0,4,0,0,0,0,0,0 }, { 2,0,0,0,0,0,3,0,0 }, { 0,0,0,0,0,2,0,0,1 }, { 0,1,0,9,0,0,0,4,0 }, { 5,0,7,0,8,0,0,0,0 }, { 9,0,0,0,1,0,8,5,0 }, { 0,0,0,8,2,0,0,0,3 }, { 0,0,6,0,7,0,4,0,0 }, { 0,7,5,0,0,0,0,9,0 } },
	           { { 0,8,0,7,0,0,0,0,6 }, { 3,0,0,0,6,0,0,4,0 }, { 0,0,4,5,0,0,0,9,0 }, { 0,0,0,0,4,8,0,0,0 }, { 0,0,2,0,7,0,0,0,5 }, { 1,0,6,0,0,0,0,0,0 }, { 0,0,0,0,0,2,8,5,0 }, { 4,0,0,0,1,0,0,3,0 }, { 0,0,0,0,0,7,4,0,0 } },
	           { { 0,0,7,0,0,0,0,2,0 }, { 9,0,0,1,0,0,3,0,0 }, { 0,0,0,0,4,2,9,0,0 }, { 4,5,0,0,0,0,0,0,0 }, { 0,3,0,0,5,1,0,0,0 }, { 0,0,0,0,0,0,8,5,0 }, { 0,1,0,2,6,0,0,0,0 }, { 8,0,0,0,0,3,0,0,7 }, { 0,0,4,0,0,0,0,9,6 } } };
	   
	   
	   public Game(Board board, int level, boolean cheat) {
	      board.clear();
	      board.setLevel(level);
	      if(level != NEW_PUZZLE) {
	         
	         int[][] newGame = null;
	         
	         int gameNum = (int)Math.round(Math.random() * 4.0);
	         boolean hFlip = (int)Math.round(Math.random() * 1.0) == 1;
	         boolean vFlip = (int)Math.round(Math.random() * 1.0) == 1;
	         int rots = (int)Math.round(Math.random() * 3.0);
	        
	         if(level == EASY) {
	            if(cheat) {
	               newGame = CHEAT_GAMES[gameNum];
	            } else {
	               newGame = EASY_GAMES[gameNum];
	            }
	         } else if(level == INTERMEDIATE) {
	            newGame = INTERMEDIATE_GAMES[gameNum];
	         } else if(level == HARD) {
	            newGame = HARD_GAMES[gameNum];
	         } else if(level == VERY_HARD) {
	            newGame = VERY_HARD_GAMES[gameNum];
	         }
	         
	         if(hFlip) {
	            int[][] newNewGame = new int[9][9];
	            for(int x=0; x<9; x++) {
	               for(int y=0; y<9; y++) {
	                  newNewGame[x][y] = newGame[x][8-y];
	               }
	            }
	            newGame = newNewGame;
	         }
	         
	         if(vFlip) {
	            int[][] newNewGame = new int[9][9];
	            for(int y=0; y<9; y++) {
	               for(int x=0; x<9; x++) {
	                  newNewGame[x][y] = newGame[8-x][y];
	               }
	            }
	            newGame = newNewGame;
	         }
	         
	         for(int i=0; i<rots; i++) {
	            int[][] newNewGame = new int[9][9];
	            for(int x=0; x<9; x++) {
	               for(int y=0; y<9; y++) {
	                  newNewGame[8-y][x] = newGame[x][y];
	               }
	            }
	            newGame = newNewGame;
	         }
	         
	         ArrayList<Integer> numSwaps = new ArrayList<Integer>();
	         for(int i=1; i<=9; i++) {
	            numSwaps.add(new Integer(i));
	         }
	         int[][] newNewGame = new int[9][9];
	         for(int i=1; i<=9; i++) {
	            int nextRndIndex = (int)Math.round(Math.random() * (numSwaps.size() - 1));
	            int nextNum = numSwaps.remove(nextRndIndex).intValue();
	            for(int x=0; x<9; x++) {
	               for(int y=0; y<9; y++) {
	                  if(newGame[x][y] == nextNum) {
	                     newNewGame[x][y] = i;
	                  }
	               }
	            }
	         }
	         newGame = newNewGame;
	         
	         for(int x=0; x<9; x++) {
	            for(int y=0; y<9; y++) {
	               if(newGame[x][y] > 0) {
	                  board.setValue(x,  y, newGame[x][y], true);
	               }
	            }
	         }
	      }
	      
	   }
	   
	}
